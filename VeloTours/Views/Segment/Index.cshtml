@model VeloTours.ViewModels.SegmentViewModel
@using VeloTours.Models;

@{
    int segmentID = @Model.Segment.SegmentID;
    int athleteID = ViewBag.Athlete;

    bool hasLeaderBoard = (@Model.LeaderBoard != null && @Model.LeaderBoard.Count > 0);
}

<h2>@Model.Info.Name
    <a href="@Url.Action("Update", new { athlete = athleteID, segment = segmentID})"><i class='icon-refresh' style='vertical-align:middle;'></i></a>
</h2>
<p>@Model.Segment.Info.Description</p>

@if (hasLeaderBoard) 
{
    <h3>Yersey</h3>
    @RenderPage("~/Views/Segment/YerseyPart.cshtml", @Model)

    <h3>Athlete's Info</h3>
    @RenderPage("~/Views/Segment/AthleteInfoPart.cshtml", @Model)
    <p>@Model.ImprovementHint</p>

    <h3>LeaderBoard</h3>
    @RenderPage("~/Views/Ride/LeaderboardPart.cshtml", @Model);
}

<p>
    Up to: 
    @foreach (var segmentArea in @Model.SegmentAreas)
    {
        @Html.ActionLink(segmentArea.Info.Name, "Index", "Area", routeValues: new { area = segmentArea.SegmentAreaID, athlete = athleteID }, htmlAttributes: null)
    }    
</p>
