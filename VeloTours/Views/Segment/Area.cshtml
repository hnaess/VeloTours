@model VeloTours.Models.SegmentArea
@using VeloTours.Helpers;
@using System.Globalization;

@{
    ViewBag.Title = "Area";
    int areaID = @Model.SegmentAreaID;
    int athleteID = ViewBag.Athlete ?? 0;
}

<h2>Resultboard for @Model.Name</h2>

<p>@Model.Description</p>

<h3>Segments in the areas</h3>
@*tablesorter*@
<table id="SegmentsTable" class="hidden-phone table-striped table-bordered table-condensed" style="table-layout: fixed; overflow: hidden;">
    <thead>
        <tr>
            <th>Name</th>
            <th class="right">distance</th>
            <th class="right">elevation<br />diff</th>
            <th class="right">grade</th>
            <th class="right">grade<br />type</th>
            <th class="right">KOM</th>
            <th class="right">speed</th>
            <th class="right">position</th>
            <th class="right">time</th>
            <th class="right">behind<br />KOM s</th>
            <th class="right">behind<br />KOM %</th>
            <th class="right">pos %</th>
            <th class="right">riders</th>
            <th class="right">ridden</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Segments)
        {
            <tr>
                <td>
                    @Html.ActionLink(item.Name, "Segment", new { segment = item.SegmentID, athlete = athleteID, area = @areaID })

                    @Html.Raw(String.Format("<a id='segment{0}' data-effortid='{1}' data-segmentid='{0}' data-komid='{2}' class='segmentLink' href='#' rel='popover' data-original-title=''><i class='icon-signal'></i></a>",
                        item.SegmentID, 0, 0))
                </td>
                <td class="right">@String.Format("{0:#0.##}", @item.Distance / 1000) km.</td>
                <td class="right">@Math.Round(item.ElevationGain ?? 0) m.</td>
                <td class="right">@String.Format("{0:#0.##}", item.AvgGrade) %</td>
                <td class="right">@item.GradeType</td>
                <td class="right">&nbsp;</td>
                <td class="right">&nbsp;</td>
                <td class="right">&nbsp;</td>
                <td class="right">&nbsp;</td>
                <td class="right">&nbsp;</td>
                <td class="right">&nbsp;</td>
                <td class="right">&nbsp;</td>
                <td class="right">@item.NoRidden</td>
                <td class="right">@item.NoRiders</td>
            </tr>
        }
        <tr>
            <td>Sum</td>
            <td class="right">@String.Format("{0:#0.##}", @Model.Distance / 1000) km.</td>
            <td class="right">@Math.Round(@Model.ElevationGain ?? 0) m.</td>
            <td class="right">@String.Format("{0:#0.##}", @Model.AvgGrade) %</td>
            <td class="right">&nbsp;</td>
            <td class="right">&nbsp;</td>
            <td class="right">&nbsp;</td>
            <td class="right">&nbsp;</td>
                <td class="right">&nbsp;</td>
            <td class="right">&nbsp;</td>
            <td class="right">&nbsp;</td>
            <td class="right">&nbsp;</td>
            <td class="right">&nbsp;</td>
            <td class="right">&nbsp;</td>
        </tr>
    </tbody>
</table>


<h2>Strava Segments for @Model.Name</h2>

@foreach (var item in Model.Segments)
{
    <iframe seamless="seamless" height="370" src="http://app.strava.com/segments/@item.SegmentID/embed" width="450"></iframe>
}

<p>
    @Html.ActionLink("Update from Strava", "AreaUpdate", routeValues: new { athlete = athleteID, area = areaID, recursive = false, }, htmlAttributes: null)<br />
    @Html.ActionLink("Update all from Strava", "SegmentUpdate", routeValues: new { athlete = athleteID, area = areaID, recursive = true, }, htmlAttributes: null)<br />
    @Html.ActionLink("Go back to overview", "/", new { athlete = athleteID })
</p>


<script>
    var athleteId = @athleteID
    $('.segmentLink').each(function () {
        var links = '<a target="_blank" data-parentid="segment' + $(this).data("segmentid") + '" class="popoverLink" href="http://www.strava.com/segments/' + $(this).data("segmentid") + '" title="View segment on Strava (external link)">View on Strava</a><br/>';
        links += '<a target="_blank" data-parentid="segment' + $(this).data("segmentid") + '" class="popoverLink" href="http://www.jonathanokeeffe.com/strava/segmentDetails.php?segmentId=' + $(this).data("segmentid") + '" title="View as much detail about this segment as you could possible imagine (external link)">O\'Keeffe\'s Segment History</a><br/>';
        links += '<a target="_blank" data-parentid="segment' + $(this).data("segmentid") + '" class="popoverLink" href="http://raceshape.com/strava-segments/' + $(this).data("segmentid") + '?rides=' + $(this).data("effortid") + '-' + $(this).data("komid") + '" title="See where you lost time to the KOM (external link)">RaceShape your PR against KOM</a><br/>';
        links += '<a target="_blank" data-parentid="segment' + $(this).data("segmentid") + '" class="popoverLink" href="http://strava-tools.raceshape.com/exporter/?url=http://app.strava.com/segments/' + $(this).data("segmentid") + '" title="Download the KOM\'s gpx/tcx/crs file for Virtual Partner action via RaceShape (external link)">Virtual Partner GPX download</a><br/>';
        links += '<a data-parentid="segment' + $(this).data("segmentid") + '" class="popoverLink" href="http://veloviewer.com/NewLeaderboard.php?segmentId=' + $(this).data("segmentid") + '" title="View the alternative leaderboard for this segment">Alternative leaderboard</a><br/>';
        links += '<a data-parentid="segment' + $(this).data("segmentid") + '" class="popoverLink" href="http://veloviewer.com/NewLeaderboard.php?segmentId=' + $(this).data("segmentid") + '&athleteId' + athleteId + '" title="View the alternative leaderboard for this segment">Your alternative leaderboard</a><br/>';

        $(this).popover({ title: 'Segment links <button type="button" data-parentid="segment' + $(this).data("segmentid") + '" class="close popoverClose" data-dismiss="alert">x</button>', content: links, trigger: 'manual' });
    });

    $('.segmentLink').click(function () {
        $(this).popover('toggle');

        $('.popoverClose').click(function () {
            $('#' + $(this).data('parentid')).popover('hide');
        });

        $('.popoverLink').click(function () {
            $('#' + $(this).data('parentid')).popover('hide');
        });
        return false;
    });


</script>
